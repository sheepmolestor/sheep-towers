/*! sheep-towers 04-04-2017 */
function getShortestPath(a,b){for(shortestPath=[],unvisitedNodes=generateGrid(gridWidth,gridHeight),minimumSteps.push([]),minimumSteps[0].push(spawnNode);;){var c=getConnectedNodes();if(minimumSteps.push(c),containsCoords(minimumSteps[minimumSteps.length-1],[a,b]))break;if(0===c.length)return null}destIndex=indexCoords(minimumSteps[minimumSteps.length-1],[a,b]),currentNode=minimumSteps[minimumSteps.length-1][destIndex],shortestPath.push(currentNode);a:for(var d=minimumSteps.length-2;d>=0;d--){units=getAllUnitStepNodes(currentNode);for(var e=0;e<minimumSteps[d].length;e++)for(var f=0;f<units.length;f++)if(sameCoords(units[f],minimumSteps[d][e])){currentNode=minimumSteps[d][e],shortestPath.push(currentNode);continue a}diagonals=getAllDiagonalStepNodes(currentNode);for(var g=0;g<minimumSteps[d].length;g++)for(var h=0;h<diagonals.length;h++)if(sameCoords(diagonals[h],minimumSteps[d][g])){currentNode=minimumSteps[d][g],shortestPath.push(currentNode);continue a}}return shortestPath}function getConnectedNodes(){var a=[];latestSteps=minimumSteps[minimumSteps.length-1];for(var b=0;b<latestSteps.length;b++)units=getUnitStepNodes(latestSteps[b]),diagonals=getDiagonalStepNodes(latestSteps[b]),addUniqueCoords(a,units),addUniqueCoords(a,diagonals);return a}function addUniqueCoords(a,b){for(var c=0;c<b.length;c++)containsCoords(a,b[c])||a.push(b[c])}function getDiagonalStepNodes(a){for(var b=[],c=[[a[0]+1,a[1]+1],[a[0]+1,a[1]-1],[a[0]-1,a[1]+1],[a[0]-1,a[1]-1]],d=[[1,1],[1,-1],[-1,1],[-1,-1]],e=0;e<c.length;e++)!isUnvisited(c[e])||isBlocked(c[e])||isBlocked([a[0]+d[e][0],a[1]])||isBlocked([a[0],a[1]+d[e][1]])||(b.push(c[e]),spliceCoords(unvisitedNodes,c[e]));return b}function getUnitStepNodes(a){for(var b=[],c=[[a[0]+1,a[1]],[a[0]-1,a[1]],[a[0],a[1]+1],[a[0],a[1]-1]],d=0;d<c.length;d++)isUnvisited(c[d])&&!isBlocked(c[d])&&(b.push(c[d]),spliceCoords(unvisitedNodes,c[d]));return b}function getAllUnitStepNodes(a){return[[a[0]+1,a[1]],[a[0]-1,a[1]],[a[0],a[1]+1],[a[0],a[1]-1]]}function getAllDiagonalStepNodes(a){return[[a[0]+1,a[1]+1],[a[0]+1,a[1]-1],[a[0]-1,a[1]+1],[a[0]-1,a[1]-1]]}function isBlocked(a){return containsCoords(blocked,a)}function isUnvisited(a){return containsCoords(unvisitedNodes,a)}function generateGrid(a,b){for(var c=[],d=0;d<a;d++)for(var e=0;e<b;e++)c.push([d,e]);return c}function drawCentredRect(a,b,c){a.fillRect(canvasWidth/2-b/2,canvasHeight/2-c/2,b,c)}function centreMapTranslate(a,b,c){a.translate(canvasWidth/2-b/2,canvasHeight/2-c/2)}function fillScaledRect(a,b,c,d,e){a.fillRect(b*GRID_SQUARE_LENGTH,c*GRID_SQUARE_LENGTH,d*GRID_SQUARE_LENGTH,e*GRID_SQUARE_LENGTH)}function containsElement(a,b){return a.indexOf(b)>=0}function getMaxOfArray(a){return Math.max.apply(null,a)}function getMinOfArray(a){return Math.min.apply(null,a)}function spliceElement(a,b){var c=a.indexOf(b);c>=0&&a.splice(c,1)}function spliceCoords(a,b){for(var c=0;c<a.length;c++)if(sameCoords(a[c],b))return void a.splice(c,1)}function containsCoords(a,b){for(var c=0;c<a.length;c++)if(sameCoords(a[c],b))return!0;return!1}function indexCoords(a,b){for(var c=0;c<a.length;c++)if(sameCoords(a[c],b))return c;return-1}function sameCoords(a,b){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}function containsCommonElement(a,b){for(var c=0;c<a.length;c++)for(var d=0;d<b.length;d++)if(a[c]===b[c])return!0;return!1}function clearArray(a){a.splice(0,a.length)}function randomInt(a){return Math.floor(Math.random()*a)}function booleanArray(a,b){var c=b-a;if(!(c<0)){for(var d=[],e=0;e<c;e++)d.push(!1);for(var f=0;f<a;f++)d.splice(randomInt(b),0,!0);return d}}function sortNumber(a,b){return a-b}function sortCoords(a,b){return a[1]<b[1]?-1:a[1]>b[1]?1:a[0]-b[0]}function groupSplice(a,b){if(!(a.length<b.length)&&0!==b.length){b.sort(sortNumber);for(var c=b.length-1;c>=0;c--)a.splice(b[c],1)}}function increaseIfPossible(a,b,c){return a>=c?a:(increased=a+b,increased>=c&&(increased=c),increased)}function decreaseIfPossible(a,b,c){return a<=c?a:(decreased=a-b,decreased<=c&&(decreased=c),decreased)}function getBlockedCoords(){return combineRectangles(rectangles)}function combineRectangles(a){for(var b=[],c=0;c<a.length;c++)for(var d=rectangleToVertices(a[c]),e=0;e<d.length;e++)containsCoords(b,d[e])||b.push(d[e]);return b.sort(sortCoords),b}function rectangleToVertices(a){for(var b=[],c=0;c<a.width;c++)for(var d=0;d<a.height;d++)b.push([a.x+c,a.y+d]);return b}function init(){mainTimer=setInterval(tick,20),initObstacles()}function tick(){update(),render()}function update(){}function render(){var a=document.getElementById("sheepCanvas"),b=a.getContext("2d");b.save(),resizeCanvas(a,b),b.clearRect(0,0,canvasWidth,canvasHeight),drawMap(b),drawObstacles(b),drawPath(b),b.restore()}function drawMap(a){a.fillStyle="white",a.globalAlpha=.6,drawCentredRect(a,800,608),a.globalAlpha=1}function initObstacles(){GRID_SQUARE_LENGTH=800/gridWidth;for(var a=0;a<obstacleData.rects.length;a++)rectangles.push(obstacleData.rects[a]);blocked=getBlockedCoords(),path=getShortestPath(24,9)}function drawObstacles(a){a.save(),centreMapTranslate(a,800,608);for(var b=0;b<rectangles.length;b++)a.fillStyle="black",fillScaledRect(a,rectangles[b].x,rectangles[b].y,rectangles[b].width,rectangles[b].height);a.restore()}function drawPath(a){if(null!==path){a.save(),centreMapTranslate(a,800,608),a.strokeStyle="red",a.lineWidth=10,a.beginPath(),a.moveTo((path[0][0]+.5)*GRID_SQUARE_LENGTH,(path[0][1]+.5)*GRID_SQUARE_LENGTH);for(var b=1;b<path.length;b++)a.lineTo((path[b][0]+.5)*GRID_SQUARE_LENGTH,(path[b][1]+.5)*GRID_SQUARE_LENGTH);a.stroke(),a.restore()}}function resizeCanvas(a,b){fitToContainer(a,b)}function fitToContainer(a,b){a.style.width="100%",a.style.height="100%",w=a.offsetWidth,h=a.offsetHeight,a.width=w,a.height=h,canvasWidth=100*w/100,canvasHeight=100*h/100,b.translate(-0*w/200,-0*h/200)}var minimumSteps=[],blocked=[],spawnNode=[0,9],currentNode=[],unvisitedNodes=[],steps=0,mainTimer=!1,FPS=50,mainInterval=20,canvasWidth=0,canvasHeight=0,mapWidth=800,mapHeight=608,gridWidth=25,gridHeight=19,MAP_ALPHA=.6,rectangles=[],GRID_SQUARE_LENGTH=32,path=[],blocked=[],percent=100;